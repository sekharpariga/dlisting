					Directory Listing Server


This is a simple directory listing server, that serves ls, cd, pwd of directory functions.

	Server is implemented using multi-thread pthread library, to serve multiple clients simulteniously.
server keeps the each accepted client session details in the queue data structure. Client session queue 
cointains each clients socketfd and present working directory as a queue node.


Following are the server directory listing commands and corresponding mapped functions.

commands			function name
ls				lsfun
cd				cdfun


Command implementation detials:
ls:
	when client sends ls  to the server, lsfun checks the pwd of client from queue node and list the 
files under it.


cd:
	when client sends cd  to the server, cdfun first changes server directory to queue->pwd path and then
its tries to change client requested path. If server succeeds to new change client requested relative/obsolute path,
it updates the queue->pwd path. If client asks for wrong path it, server replies to the client as wrong input.

pwd:
	When client first connects to the server, client session queue->pwd will have servers running directory path.
so, whenever client send pwd, server sends the queue->pwd buffer.

bye:
	When client sends bye, server closes the client connection by removing the client session queue node.


Queue data structure details:
	typedef struct node 
	{
	        int *client_socket;
	        char pwd[PATH_MAX];
	        struct node *next;
	} node_t;

	node *head, *tail;
	void enqueue(int *client_socket, char *pwd);
	node_t *dequeue();

enqueue:
	when client successfully connects to server, this function creates the above queue node into the queue.

dequeue:
	when client sends "bye", server removes the clients queue node and closes the client connection.


Multi-threading:
	when server successfully starts, it will create thread pool of max THREADPOOL threads.
server uses pthread mutex lock to syn operations on adjusting session queue data.


Instructions to build:
tools required : gcc and make

dlisting :make
gcc -g -Wall -Wextra -pedantic  -c common.c -o common.o
gcc -g -Wall -Wextra -pedantic  -c queue.c -o queue.o
gcc -g -Wall -Wextra -pedantic  server.c common.o queue.o -o server.o -lpthread
gcc -g -Wall -Wextra -pedantic  client.c -o client.o


commands output:

dlisting :./server.o 
new conn:4
closed conn:4


dlisting :./client.o 
pwd
/root/dlisting

ls
file	README	Mon Feb  1 07:01:46 2021
file	common.h	Mon Feb  1 07:01:46 2021
file	client.o	Mon Feb  1 07:56:11 2021
file	common.o	Mon Feb  1 07:56:09 2021
file	client.c	Mon Feb  1 07:01:46 2021
file	server.c	Mon Feb  1 07:01:46 2021
file	.gitignore	Mon Feb  1 07:01:46 2021
file	queue.h	Mon Feb  1 07:01:46 2021
file	server.o	Mon Feb  1 07:56:10 2021
file	LICENSE	Mon Feb  1 07:01:46 2021
file	queue.o	Mon Feb  1 07:56:09 2021
file	queue.c	Mon Feb  1 07:01:46 2021
file	common.c	Mon Feb  1 07:29:39 2021
dir	.git	Mon Feb  1 07:34:00 2021
file	makefile	Mon Feb  1 07:01:46 2021
file	printme.c	Mon Feb  1 07:54:31 2021


cd ..
 
pwd
/root/dlisting

bye
dlisting :

Limitations:
2. PATH Size is 4096 bytes

Assumptions:
1. added birthtime macro for handling missing of file birthtime in some OS.

Linux distribution used : 
Distributor ID:	ArchLinux
Description:	Linux Rolling
Release:		2021.1

gcc (GCC) 10.2.0

configuration settings file : common.h
