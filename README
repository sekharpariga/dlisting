			
								Directory Listing Server


This a simple directory listing server, that serves ls, cd, pwd of directory functions.

	Server is implemented using multi-thread pthread library, to serve multiple clients simulteniously.
server keeps the each accepted client session details in the queue data structure. Client session queue 
cointains each clients socketfd and present working directory as a queue node.


flowing are the server directory listing commands and their mapped implemented functions.

commands			function name
ls						lsfun
cd						cdfun


command implementation detials:

ls:
	when client sends ls command to the server, lsfun checks the pwd of client from queue node and list the 
files under it.


cd:
	when client sends cd command to the server, cdfun first changes server directory to queue->pwd path and then
its tries to change client requested path. If server succeeds to new change client requested relative/obsolute path,
it updates the queue->pwd path. If client asks for wrong path it, server replies to the client as wrong input.


pwd:
	When client first connects to the server, client session queue->pwd will have servers running directory path.
so, when ever client request pwd command, server sends the queue->pwd buffer stored path.


bye:
	When client sends "bye", server closes the client connection by removing the client session queue node.


Queue data structure details:

	typedef struct node 
	{
	        int *client_socket;
	        char pwd[PATH_MAX];
	        struct node *next;
	} node_t;

	node *head, *tail;
	void enqueue(int *client_socket, char *pwd);
	node_t *dequeue();

enqueue fun:
	when client successfully connects to server, this function creates the above queue node into the queue.


dequeue fun:
	when client sends "bye", server removes the clients queue node and closes the client connection.


Multi-threading:
	when server successfully starts, it will create thread pool of max defined macro THREADPOOL threads.
server uses pthread mutex lock to syn operations on adjusting session queue's head and tail.

